{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","App","useState","todosList","setTodosList","setTitle","selectedUser","setselectedUser","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","currentList","htmlFor","type","value","placeholder","onChange","e","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.388653c8.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    // eslint-disable-next-line\n    <article data-id={todo.id} className={classNames('TodoInfo', {'TodoInfo--completed': todo.completed})}>\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { Todo } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = useState<Todo[]>(todos);\n  const [title, setTitle] = useState('');\n  const [selectedUser, setselectedUser] = useState('0');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    if (!title && title.trim() === '' && selectedUser === '0') {\n      setTitleError(true);\n      setUserError(true);\n\n      return;\n    }\n\n    if (!title) {\n      setTitleError(true);\n\n      return;\n    }\n\n    if (selectedUser === '0') {\n      setUserError(true);\n\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: Math.max(...todosList.map(todo => todo.id)) + 1,\n      title,\n      completed: false,\n      userId: +selectedUser,\n      user: getUserById(+selectedUser),\n    };\n\n    setTodosList(currentList => [...currentList, newTodo]);\n    setTitle('');\n    setselectedUser('0');\n    setTitleError(false);\n    setUserError(false);\n  }\n\n  function handleTitle(e:React.ChangeEvent<HTMLInputElement>) {\n    setTitle(e.target.value);\n    setTitleError(false);\n  }\n\n  function handleSelect(e:React.ChangeEvent<HTMLSelectElement>) {\n    setselectedUser(e.target.value);\n    setUserError(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            value={title}\n            placeholder=\"Enter title\"\n            data-cy=\"titleInput\"\n            onChange={handleTitle}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelection\">User: </label>\n          <select\n            id=\"userSelection\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={handleSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => {\n              return <option key={user.id} value={user.id}>{user.name}</option>;\n            })}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}